{"version":3,"sources":["webpack:///./node_modules/fault/index.js","webpack:///./node_modules/lowlight/lib/core.js","webpack:///./node_modules/format/format.js","webpack:///./node_modules/highlight.js/lib/highlight.js"],"names":["formatter","fault","create","Error","EConstructor","FormattedError","displayName","name","format","apply","arguments","module","exports","eval","EvalError","range","RangeError","reference","ReferenceError","syntax","SyntaxError","type","TypeError","uri","URIError","high","High","prototype","low","highlight","language","value","options","prefix","normalize","coreHighlight","highlightAuto","autoHighlight","registerLanguage","lang","languages","languageNames","push","aliases","registerAlias","listLanguages","concat","getLanguage","inherit","own","hasOwnProperty","result","secondBest","current","settings","subset","length","index","relevance","alias","key","list","map","ignore","continuation","top","currentChildren","offset","count","match","children","continuations","stack","modeBuffer","langRe","global","RegExp","source","re","compileMode","mode","parent","terminators","compiledKeywords","flatten","className","pairs","pair","toLowerCase","split","Number","compiled","keywords","beginKeywords","Object","keys","forEach","lexemesRe","lexemes","begin","join","beginRe","end","endsWithParent","endRe","terminatorEnd","illegal","illegalRe","undefined","contains","c","variants","expandMode","starts","filter","Boolean","exec","execNoop","compileLanguage","lastIndex","processLexeme","substring","substr","pop","error","message","indexOf","addText","buffer","lexeme","newMode","endMode","origin","addSiblings","processBuffer","values","test","subMode","startNewMode","returnBegin","endOfMode","endsParent","returnEnd","excludeEnd","isIllegal","node","build","excludeBegin","subLanguage","subvalue","explicit","buildText","processSubLanguage","keyword","submatch","nodes","keywordMatch","processKeywords","siblings","sibling","tail","contents","noPrefix","tagName","properties","call","expression","namespace","fmt","arg","tmp","precision","argIndex","args","slice","i","n","escaped","leadingZero","nextArg","slurpNumber","digits","parseInt","toString","String","fromCharCode","parseFloat","toFixed","replace","JSON","stringify","toUpperCase","vsprintf","replacements","console","log","printf","factory","globalObject","hljs","ArrayProto","objectKeys","noHighlightRe","languagePrefixRe","fixMarkupRe","classPrefix","tabReplace","useBR","escape","tag","nodeName","testRe","isNotHighlighted","objects","Array","obj","nodeStream","_nodeStream","child","firstChild","nextSibling","nodeType","nodeValue","event","reStr","case_insensitive","compiled_keywords","str","kw","endSameAsBegin","terminator_end","cached_variants","variant","expand_mode","regexps","separator","backreferenceRe","numCaptures","ret","joinRe","ignore_illegals","escapeRe","match_str","buildSpan","classname","insideSpan","leaveOpen","openSpan","mode_buffer","keyword_match","last_index","new_mode","skip","end_mode","e","text","languageSubset","second_best","autoDetection","fixMarkup","p1","highlightBlock","block","originalStream","resultNode","_class","classes","parentNode","blockLanguage","document","createElementNS","innerHTML","textContent","original","highlighted","processed","nodeStack","selectStream","open","attributes","a","close","render","stream","reverse","splice","mergeStreams","prevClassName","currentLang","resultLang","trim","buildClassName","initHighlighting","called","blocks","querySelectorAll","disableAutodetect","configure","user_options","initHighlightingOnLoad","addEventListener","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","inherits","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","window","self"],"mappings":"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","file":"react-syntax-highlighter/lowlight-import-3eedfc8595da4be42241.js","sourcesContent":["'use strict';\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar formatter = require('format');\n\nvar fault = create(Error);\nmodule.exports = fault;\nfault.eval = create(EvalError);\nfault.range = create(RangeError);\nfault.reference = create(ReferenceError);\nfault.syntax = create(SyntaxError);\nfault.type = create(TypeError);\nfault.uri = create(URIError);\nfault.create = create; // Create a new `EConstructor`, with the formatted `format` as a first argument.\n\nfunction create(EConstructor) {\n  FormattedError.displayName = EConstructor.displayName || EConstructor.name;\n  return FormattedError;\n\n  function FormattedError(format) {\n    if (format) {\n      format = formatter.apply(null, arguments);\n    }\n\n    return new EConstructor(format);\n  }\n}","'use strict';\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nvar high = require('highlight.js/lib/highlight.js');\n\nvar fault = require('fault'); // The lowlight interface, which has to be compatible with highlight.js, as\n// this object is passed to highlight.js syntaxes.\n\n\nfunction High() {}\n\nHigh.prototype = high; // Expose.\n\nvar low = new High(); // Ha!\n\nmodule.exports = low;\nlow.highlight = highlight;\nlow.highlightAuto = autoHighlight;\nlow.registerLanguage = registerLanguage;\nlow.listLanguages = listLanguages;\nlow.registerAlias = registerAlias;\nlow.getLanguage = getLanguage;\nvar inherit = high.inherit;\nvar own = {}.hasOwnProperty;\nvar concat = [].concat;\nvar defaultPrefix = 'hljs-';\nvar keyInsensitive = 'case_insensitive';\nvar keyCachedVariants = 'cached_variants';\nvar space = ' ';\nvar verticalBar = '|'; // Maps of syntaxes.\n\nvar languageNames = [];\nvar languages = {};\nvar aliases = {}; // Highlighting with language detection.\n// Accepts a string with the code to highlight.\n// Returns an object with the following properties:\n//\n// *   `language` — Detected language\n// *   `relevance` — Integer\n// *   `value` — HAST tree with highlighting markup\n// *   `secondBest` — Object with the same structure for second-best\n//     heuristically detected language, may be absent.\n\nfunction autoHighlight(value, options) {\n  var settings = options || {};\n  var subset = settings.subset || languageNames;\n  var prefix = settings.prefix;\n  var length = subset.length;\n  var index = -1;\n  var result;\n  var secondBest;\n  var current;\n  var name;\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix;\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value);\n  }\n\n  secondBest = normalize({});\n  result = normalize({});\n\n  while (++index < length) {\n    name = subset[index];\n\n    if (!getLanguage(name)) {\n      continue;\n    }\n\n    current = normalize(coreHighlight(name, value, false, prefix));\n    current.language = name;\n\n    if (current.relevance > secondBest.relevance) {\n      secondBest = current;\n    }\n\n    if (current.relevance > result.relevance) {\n      secondBest = result;\n      result = current;\n    }\n  }\n\n  if (secondBest.language) {\n    result.secondBest = secondBest;\n  }\n\n  return result;\n} // Highlighting `value` in the language `language`.\n\n\nfunction highlight(language, value, options) {\n  var settings = options || {};\n  var prefix = settings.prefix;\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix;\n  }\n\n  return normalize(coreHighlight(language, value, true, prefix));\n} // Register a language.\n\n\nfunction registerLanguage(name, syntax) {\n  var lang = syntax(low);\n  languages[name] = lang;\n  languageNames.push(name);\n\n  if (lang.aliases) {\n    registerAlias(name, lang.aliases);\n  }\n} // Get a list of all registered languages.\n\n\nfunction listLanguages() {\n  return languageNames.concat();\n} // Register more aliases for an already registered language.\n\n\nfunction registerAlias(name, alias) {\n  var map = name;\n  var key;\n  var list;\n  var length;\n  var index;\n\n  if (alias) {\n    map = {};\n    map[name] = alias;\n  }\n\n  for (key in map) {\n    list = map[key];\n    list = typeof list === 'string' ? [list] : list;\n    length = list.length;\n    index = -1;\n\n    while (++index < length) {\n      aliases[list[index]] = key;\n    }\n  }\n} // Core highlighting function.\n// Accepts a language name, or an alias, and a string with the code to\n// highlight.\n// eslint-disable-next-line max-params\n\n\nfunction coreHighlight(name, value, ignore, prefix, continuation) {\n  var continuations = {};\n  var stack = [];\n  var modeBuffer = '';\n  var relevance = 0;\n  var language;\n  var top;\n  var current;\n  var currentChildren;\n  var offset;\n  var count;\n  var match;\n  var children;\n\n  if (typeof name !== 'string') {\n    throw fault('Expected `string` for name, got `%s`', name);\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value);\n  }\n\n  language = getLanguage(name);\n  top = continuation || language;\n  children = [];\n  current = top;\n  currentChildren = children;\n\n  if (!language) {\n    throw fault('Unknown language: `%s` is not registered', name);\n  }\n\n  compileLanguage(language);\n\n  try {\n    top.terminators.lastIndex = 0;\n    offset = 0;\n    match = top.terminators.exec(value);\n\n    while (match) {\n      count = processLexeme(value.substring(offset, match.index), match[0]);\n      offset = match.index + count;\n      top.terminators.lastIndex = offset;\n      match = top.terminators.exec(value);\n    }\n\n    processLexeme(value.substr(offset));\n    current = top;\n\n    while (current.parent) {\n      if (current.className) {\n        pop();\n      }\n\n      current = current.parent;\n    }\n\n    return {\n      relevance: relevance,\n      value: currentChildren,\n      language: name,\n      top: top\n    };\n  } catch (error) {\n    /* istanbul ignore if - Catch-all  */\n    if (error.message.indexOf('Illegal') === -1) {\n      throw error;\n    }\n\n    return {\n      relevance: 0,\n      value: addText(value, [])\n    };\n  } // Process a lexeme.  Returns next position.\n\n\n  function processLexeme(buffer, lexeme) {\n    var newMode;\n    var endMode;\n    var origin;\n    modeBuffer += buffer;\n\n    if (lexeme === undefined) {\n      addSiblings(processBuffer(), currentChildren);\n      return 0;\n    }\n\n    newMode = subMode(lexeme, top);\n\n    if (newMode) {\n      addSiblings(processBuffer(), currentChildren);\n      startNewMode(newMode, lexeme);\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    endMode = endOfMode(top, lexeme);\n\n    if (endMode) {\n      origin = top;\n\n      if (!(origin.returnEnd || origin.excludeEnd)) {\n        modeBuffer += lexeme;\n      }\n\n      addSiblings(processBuffer(), currentChildren); // Close open modes.\n\n      do {\n        if (top.className) {\n          pop();\n        }\n\n        relevance += top.relevance;\n        top = top.parent;\n      } while (top !== endMode.parent);\n\n      if (origin.excludeEnd) {\n        addText(lexeme, currentChildren);\n      }\n\n      modeBuffer = '';\n\n      if (endMode.starts) {\n        startNewMode(endMode.starts, '');\n      }\n\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    if (isIllegal(lexeme, top)) {\n      throw fault('Illegal lexeme \"%s\" for mode \"%s\"', lexeme, top.className || '<unnamed>');\n    } // Parser should not reach this point as all types of lexemes should be\n    // caught earlier, but if it does due to some bug make sure it advances\n    // at least one character forward to prevent infinite looping.\n\n\n    modeBuffer += lexeme;\n    return lexeme.length ||\n    /* istanbul ignore next */\n    1;\n  } // Start a new mode with a `lexeme` to process.\n\n\n  function startNewMode(mode, lexeme) {\n    var node;\n\n    if (mode.className) {\n      node = build(mode.className, []);\n    }\n\n    if (mode.returnBegin) {\n      modeBuffer = '';\n    } else if (mode.excludeBegin) {\n      addText(lexeme, currentChildren);\n      modeBuffer = '';\n    } else {\n      modeBuffer = lexeme;\n    } // Enter a new mode.\n\n\n    if (node) {\n      currentChildren.push(node);\n      stack.push(currentChildren);\n      currentChildren = node.children;\n    }\n\n    top = Object.create(mode, {\n      parent: {\n        value: top\n      }\n    });\n  } // Process the buffer.\n\n\n  function processBuffer() {\n    var result = top.subLanguage ? processSubLanguage() : processKeywords();\n    modeBuffer = '';\n    return result;\n  } // Process a sublanguage (returns a list of nodes).\n\n\n  function processSubLanguage() {\n    var explicit = typeof top.subLanguage === 'string';\n    var subvalue;\n    /* istanbul ignore if - support non-loaded sublanguages */\n\n    if (explicit && !languages[top.subLanguage]) {\n      return addText(modeBuffer, []);\n    }\n\n    if (explicit) {\n      subvalue = coreHighlight(top.subLanguage, modeBuffer, true, prefix, continuations[top.subLanguage]);\n    } else {\n      subvalue = autoHighlight(modeBuffer, {\n        subset: top.subLanguage.length === 0 ? undefined : top.subLanguage,\n        prefix: prefix\n      });\n    } // If we couldn’t highlight, for example because the requests subset isn’t\n    // loaded, return a text node.\n\n\n    if (!subvalue.language) {\n      return [buildText(modeBuffer)];\n    } // Counting embedded language score towards the host language may be\n    // disabled with zeroing the containing mode relevance.\n    // Usecase in point is Markdown that allows XML everywhere and makes every\n    // XML snippet to have a much larger Markdown score.\n\n\n    if (top.relevance > 0) {\n      relevance += subvalue.relevance;\n    }\n\n    if (explicit) {\n      continuations[top.subLanguage] = subvalue.top;\n    }\n\n    return [build(subvalue.language, subvalue.value, true)];\n  } // Process keywords. Returns nodes.\n\n\n  function processKeywords() {\n    var nodes = [];\n    var lastIndex;\n    var keyword;\n    var node;\n    var submatch;\n\n    if (!top.keywords) {\n      return addText(modeBuffer, nodes);\n    }\n\n    lastIndex = 0;\n    top.lexemesRe.lastIndex = 0;\n    keyword = top.lexemesRe.exec(modeBuffer);\n\n    while (keyword) {\n      addText(modeBuffer.substring(lastIndex, keyword.index), nodes);\n      submatch = keywordMatch(top, keyword);\n\n      if (submatch) {\n        relevance += submatch[1];\n        node = build(submatch[0], []);\n        nodes.push(node);\n        addText(keyword[0], node.children);\n      } else {\n        addText(keyword[0], nodes);\n      }\n\n      lastIndex = top.lexemesRe.lastIndex;\n      keyword = top.lexemesRe.exec(modeBuffer);\n    }\n\n    addText(modeBuffer.substr(lastIndex), nodes);\n    return nodes;\n  } // Add siblings.\n\n\n  function addSiblings(siblings, nodes) {\n    var length = siblings.length;\n    var index = -1;\n    var sibling;\n\n    while (++index < length) {\n      sibling = siblings[index];\n\n      if (sibling.type === 'text') {\n        addText(sibling.value, nodes);\n      } else {\n        nodes.push(sibling);\n      }\n    }\n  } // Add a text.\n\n\n  function addText(value, nodes) {\n    var tail;\n\n    if (value) {\n      tail = nodes[nodes.length - 1];\n\n      if (tail && tail.type === 'text') {\n        tail.value += value;\n      } else {\n        nodes.push(buildText(value));\n      }\n    }\n\n    return nodes;\n  } // Build a text.\n\n\n  function buildText(value) {\n    return {\n      type: 'text',\n      value: value\n    };\n  } // Build a span.\n\n\n  function build(name, contents, noPrefix) {\n    return {\n      type: 'element',\n      tagName: 'span',\n      properties: {\n        className: [(noPrefix ? '' : prefix) + name]\n      },\n      children: contents\n    };\n  } // Check if the first word in `keywords` is a keyword.\n\n\n  function keywordMatch(mode, keywords) {\n    var keyword = keywords[0];\n\n    if (language[keyInsensitive]) {\n      keyword = keyword.toLowerCase();\n    }\n\n    return own.call(mode.keywords, keyword) && mode.keywords[keyword];\n  } // Check if `lexeme` is illegal according to `mode`.\n\n\n  function isIllegal(lexeme, mode) {\n    return !ignore && test(mode.illegalRe, lexeme);\n  } // Check if `lexeme` ends `mode`.\n\n\n  function endOfMode(mode, lexeme) {\n    if (test(mode.endRe, lexeme)) {\n      while (mode.endsParent && mode.parent) {\n        mode = mode.parent;\n      }\n\n      return mode;\n    }\n\n    if (mode.endsWithParent) {\n      return endOfMode(mode.parent, lexeme);\n    }\n  } // Check a sub-mode.\n\n\n  function subMode(lexeme, mode) {\n    var values = mode.contains;\n    var length = values.length;\n    var index = -1;\n\n    while (++index < length) {\n      if (test(values[index].beginRe, lexeme)) {\n        return values[index];\n      }\n    }\n  } // Exit the current context.\n\n\n  function pop() {\n    /* istanbul ignore next - removed in hljs 9.3 */\n    currentChildren = stack.pop() || children;\n  }\n}\n\nfunction expandMode(mode) {\n  var length;\n  var index;\n  var variants;\n  var result;\n\n  if (mode.variants && !mode[keyCachedVariants]) {\n    variants = mode.variants;\n    length = variants.length;\n    index = -1;\n    result = [];\n\n    while (++index < length) {\n      result[index] = inherit(mode, {\n        variants: null\n      }, variants[index]);\n    }\n\n    mode[keyCachedVariants] = result;\n  }\n\n  return mode[keyCachedVariants] || (mode.endsWithParent ? [inherit(mode)] : [mode]);\n} // Compile a language.\n\n\nfunction compileLanguage(language) {\n  compileMode(language); // Compile a language mode, optionally with a parent.\n  // eslint-disable-next-line complexity\n\n  function compileMode(mode, parent) {\n    var compiledKeywords = {};\n    var terminators;\n\n    if (mode.compiled) {\n      return;\n    }\n\n    mode.compiled = true;\n    mode.keywords = mode.keywords || mode.beginKeywords;\n\n    if (mode.keywords) {\n      if (typeof mode.keywords === 'string') {\n        flatten('keyword', mode.keywords);\n      } else {\n        Object.keys(mode.keywords).forEach(function (className) {\n          flatten(className, mode.keywords[className]);\n        });\n      }\n\n      mode.keywords = compiledKeywords;\n    }\n\n    mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n    if (parent) {\n      if (mode.beginKeywords) {\n        mode.begin = '\\\\b(' + mode.beginKeywords.split(space).join(verticalBar) + ')\\\\b';\n      }\n\n      if (!mode.begin) {\n        mode.begin = /\\B|\\b/;\n      }\n\n      mode.beginRe = langRe(mode.begin);\n\n      if (!mode.end && !mode.endsWithParent) {\n        mode.end = /\\B|\\b/;\n      }\n\n      if (mode.end) {\n        mode.endRe = langRe(mode.end);\n      }\n\n      mode.terminatorEnd = source(mode.end) || '';\n\n      if (mode.endsWithParent && parent.terminatorEnd) {\n        mode.terminatorEnd += (mode.end ? verticalBar : '') + parent.terminatorEnd;\n      }\n    }\n\n    if (mode.illegal) {\n      mode.illegalRe = langRe(mode.illegal);\n    }\n\n    if (mode.relevance === undefined) {\n      mode.relevance = 1;\n    }\n\n    if (!mode.contains) {\n      mode.contains = [];\n    }\n\n    mode.contains = concat.apply([], mode.contains.map(function (c) {\n      return expandMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function (c) {\n      compileMode(c, mode);\n    });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    terminators = mode.contains.map(map).concat([mode.terminatorEnd, mode.illegal]).map(source).filter(Boolean);\n    mode.terminators = terminators.length === 0 ? {\n      exec: execNoop\n    } : langRe(terminators.join(verticalBar), true);\n\n    function map(c) {\n      return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n    } // Flatten a classname.\n\n\n    function flatten(className, value) {\n      var pairs;\n      var pair;\n      var index;\n      var length;\n\n      if (language[keyInsensitive]) {\n        value = value.toLowerCase();\n      }\n\n      pairs = value.split(space);\n      length = pairs.length;\n      index = -1;\n\n      while (++index < length) {\n        pair = pairs[index].split(verticalBar);\n        compiledKeywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n      }\n    }\n  } // Create a regex for `value`.\n\n\n  function langRe(value, global) {\n    return new RegExp(source(value), 'm' + (language[keyInsensitive] ? 'i' : '') + (global ? 'g' : ''));\n  } // Get the source of an expression or string.\n\n\n  function source(re) {\n    return re && re.source || re;\n  }\n} // Normalize a syntax result.\n\n\nfunction normalize(result) {\n  return {\n    relevance: result.relevance || 0,\n    language: result.language || null,\n    value: result.value || []\n  };\n} // Check if `expression` matches `lexeme`.\n\n\nfunction test(expression, lexeme) {\n  var match = expression && expression.exec(lexeme);\n  return match && match.index === 0;\n} // No-op exec.\n\n\nfunction execNoop() {\n  return null;\n} // Get a language by `name`.\n\n\nfunction getLanguage(name) {\n  name = name.toLowerCase();\n  return languages[name] || languages[aliases[name]];\n}","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n//\n// format - printf-like string formatting for JavaScript\n// github.com/samsonjs/format\n// @_sjs\n//\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n//\n// MIT License\n// http://sjs.mit-license.org\n//\n;\n\n(function () {\n  //// Export the API\n  var namespace; // CommonJS / Node module\n\n  if (typeof module !== 'undefined') {\n    namespace = module.exports = format;\n  } // Browsers and other environments\n  else {\n      // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n      namespace = function () {\n        return this || (1, eval)('this');\n      }();\n    }\n\n  namespace.format = format;\n  namespace.vsprintf = vsprintf;\n\n  if (typeof console !== 'undefined' && typeof console.log === 'function') {\n    namespace.printf = printf;\n  }\n\n  function printf()\n  /* ... */\n  {\n    console.log(format.apply(null, arguments));\n  }\n\n  function vsprintf(fmt, replacements) {\n    return format.apply(null, [fmt].concat(replacements));\n  }\n\n  function format(fmt) {\n    var argIndex = 1 // skip initial format argument\n    ,\n        args = [].slice.call(arguments),\n        i = 0,\n        n = fmt.length,\n        result = '',\n        c,\n        escaped = false,\n        arg,\n        tmp,\n        leadingZero = false,\n        precision,\n        nextArg = function nextArg() {\n      return args[argIndex++];\n    },\n        slurpNumber = function slurpNumber() {\n      var digits = '';\n\n      while (/\\d/.test(fmt[i])) {\n        digits += fmt[i++];\n        c = fmt[i];\n      }\n\n      return digits.length > 0 ? parseInt(digits) : null;\n    };\n\n    for (; i < n; ++i) {\n      c = fmt[i];\n\n      if (escaped) {\n        escaped = false;\n\n        if (c == '.') {\n          leadingZero = false;\n          c = fmt[++i];\n        } else if (c == '0' && fmt[i + 1] == '.') {\n          leadingZero = true;\n          i += 2;\n          c = fmt[i];\n        } else {\n          leadingZero = true;\n        }\n\n        precision = slurpNumber();\n\n        switch (c) {\n          case 'b':\n            // number in binary\n            result += parseInt(nextArg(), 10).toString(2);\n            break;\n\n          case 'c':\n            // character\n            arg = nextArg();\n            if (typeof arg === 'string' || arg instanceof String) result += arg;else result += String.fromCharCode(parseInt(arg, 10));\n            break;\n\n          case 'd':\n            // number in decimal\n            result += parseInt(nextArg(), 10);\n            break;\n\n          case 'f':\n            // floating point number\n            tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\n            result += leadingZero ? tmp : tmp.replace(/^0/, '');\n            break;\n\n          case 'j':\n            // JSON\n            result += JSON.stringify(nextArg());\n            break;\n\n          case 'o':\n            // number in octal\n            result += '0' + parseInt(nextArg(), 10).toString(8);\n            break;\n\n          case 's':\n            // string\n            result += nextArg();\n            break;\n\n          case 'x':\n            // lowercase hexadecimal\n            result += '0x' + parseInt(nextArg(), 10).toString(16);\n            break;\n\n          case 'X':\n            // uppercase hexadecimal\n            result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();\n            break;\n\n          default:\n            result += c;\n            break;\n        }\n      } else if (c === '%') {\n        escaped = true;\n      } else {\n        result += c;\n      }\n    }\n\n    return result;\n  }\n})();","require(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n(function (factory) {\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window || typeof self === 'object' && self; // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  // `nodeType` is checked to ensure that `exports` is not a HTML element.\n\n  if (typeof exports !== 'undefined' && !exports.nodeType) {\n    factory(exports);\n  } else if (globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({}); // Finally register the global hljs with AMD.\n\n    if (typeof define === 'function' && define.amd) {\n      define([], function () {\n        return globalObject.hljs;\n      });\n    }\n  }\n})(function (hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys; // Global internal variables used within the highlight.js library.\n\n  var languages = {},\n      aliases = {}; // Regular expressions used throughout the highlight.js library.\n\n  var noHighlightRe = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm; // The object will be assigned by the build tool. It used to synchronize API \n  // of external language files with minified version of the highlight.js library.\n\n  var API_REPLACES;\n  var spanEndTag = '</span>'; // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n\n    var classes = block.className + ' ';\n    classes += block.parentNode ? block.parentNode.className : ''; // language-* takes precedence over non-prefixed class names.\n\n    match = languagePrefixRe.exec(classes);\n\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i];\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent) {\n    // inherit(parent, override_obj, override_obj, ...)\n    var key;\n    var result = {};\n    var objects = Array.prototype.slice.call(arguments, 1);\n\n    for (key in parent) {\n      result[key] = parent[key];\n    }\n\n    objects.forEach(function (obj) {\n      for (key in obj) {\n        result[key] = obj[key];\n      }\n    });\n    return result;\n  }\n  /* Stream merging */\n\n\n  function nodeStream(node) {\n    var result = [];\n\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3) offset += child.nodeValue.length;else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset); // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n\n      return offset;\n    })(node, 0);\n\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n\n      if (original[0].offset !== highlighted[0].offset) {\n        return original[0].offset < highlighted[0].offset ? original : highlighted;\n      }\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n       if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n       ... which is collapsed to:\n      */\n\n\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {\n        return ' ' + a.nodeName + '=\"' + escape(a.value).replace('\"', '&quot;') + '\"';\n      }\n\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substring(processed, stream[0].offset));\n      processed = stream[0].offset;\n\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n\n    return result + escape(value.substr(processed));\n  }\n  /* Initialization */\n\n\n  function expand_mode(mode) {\n    if (mode.variants && !mode.cached_variants) {\n      mode.cached_variants = mode.variants.map(function (variant) {\n        return inherit(mode, {\n          variants: null\n        }, variant);\n      });\n    }\n\n    return mode.cached_variants || mode.endsWithParent && [inherit(mode)] || [mode];\n  }\n\n  function restoreLanguageApi(obj) {\n    if (API_REPLACES && !obj.langApiRestored) {\n      obj.langApiRestored = true;\n\n      for (var key in API_REPLACES) {\n        obj[key] && (obj[API_REPLACES[key]] = obj[key]);\n      }\n\n      (obj.contains || []).concat(obj.variants || []).forEach(restoreLanguageApi);\n    }\n  }\n\n  function compileLanguage(language) {\n    function reStr(re) {\n      return re && re.source || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(reStr(value), 'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : ''));\n    } // joinRe logically computes regexps.join(separator), but fixes the\n    // backreferences so they continue to match.\n\n\n    function joinRe(regexps, separator) {\n      // backreferenceRe matches an open parenthesis or backreference. To avoid\n      // an incorrect parse, it additionally matches the following:\n      // - [...] elements, where the meaning of parentheses and escapes change\n      // - other escape sequences, so we do not misparse escape sequences as\n      //   interesting elements\n      // - non-matching or lookahead parentheses, which do not capture. These\n      //   follow the '(' with a '?'.\n      var backreferenceRe = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n      var numCaptures = 0;\n      var ret = '';\n\n      for (var i = 0; i < regexps.length; i++) {\n        var offset = numCaptures;\n        var re = reStr(regexps[i]);\n\n        if (i > 0) {\n          ret += separator;\n        }\n\n        while (re.length > 0) {\n          var match = backreferenceRe.exec(re);\n\n          if (match == null) {\n            ret += re;\n            break;\n          }\n\n          ret += re.substring(0, match.index);\n          re = re.substring(match.index + match[0].length);\n\n          if (match[0][0] == '\\\\' && match[1]) {\n            // Adjust the backreference.\n            ret += '\\\\' + String(Number(match[1]) + offset);\n          } else {\n            ret += match[0];\n\n            if (match[0] == '(') {\n              numCaptures++;\n            }\n          }\n        }\n      }\n\n      return ret;\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled) return;\n      mode.compiled = true;\n      mode.keywords = mode.keywords || mode.beginKeywords;\n\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function flatten(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n\n          str.split(' ').forEach(function (kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') {\n          // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n\n        mode.keywords = compiled_keywords;\n      }\n\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n\n        if (!mode.begin) mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (mode.endSameAsBegin) mode.end = mode.begin;\n        if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n        if (mode.end) mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end) mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n\n      if (mode.illegal) mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null) mode.relevance = 1;\n\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n\n      mode.contains = Array.prototype.concat.apply([], mode.contains.map(function (c) {\n        return expand_mode(c === 'self' ? mode : c);\n      }));\n      mode.contains.forEach(function (c) {\n        compileMode(c, mode);\n      });\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators = mode.contains.map(function (c) {\n        return c.beginKeywords ? '\\\\.?(?:' + c.begin + ')\\\\.?' : c.begin;\n      }).concat([mode.terminator_end, mode.illegal]).map(reStr).filter(Boolean);\n      mode.terminators = terminators.length ? langRe(joinRe(terminators, '|'), true) : {\n        exec: function exec()\n        /*s*/\n        {\n          return null;\n        }\n      };\n    }\n\n    compileMode(language);\n  }\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n   - relevance (int)\n  - value (an HTML string with highlighting markup)\n   */\n\n\n  function highlight(name, value, ignore_illegals, continuation) {\n    function escapeRe(value) {\n      return new RegExp(value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n    }\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          if (mode.contains[i].endSameAsBegin) {\n            mode.contains[i].endRe = escapeRe(mode.contains[i].beginRe.exec(lexeme)[0]);\n          }\n\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n\n        return mode;\n      }\n\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan = '<span class=\"' + classPrefix,\n          closeSpan = leaveOpen ? '' : spanEndTag;\n      openSpan += classname + '\">';\n      if (!classname) return insideSpan;\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n      if (!top.keywords) return escape(mode_buffer);\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substring(last_index, match.index));\n        keyword_match = keywordMatch(top, match);\n\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ? highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) : highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined); // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += top.subLanguage != null ? processSubLanguage() : processKeywords();\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className ? buildSpan(mode.className, '', true) : '';\n      top = Object.create(mode, {\n        parent: {\n          value: top\n        }\n      });\n    }\n\n    function processLexeme(buffer, lexeme) {\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n\n          processBuffer();\n\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n\n      if (end_mode) {\n        var origin = top;\n\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n\n          processBuffer();\n\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n\n          if (!top.skip && !top.subLanguage) {\n            relevance += top.relevance;\n          }\n\n          top = top.parent;\n        } while (top !== end_mode.parent);\n\n        if (end_mode.starts) {\n          if (end_mode.endSameAsBegin) {\n            end_mode.starts.endRe = end_mode.endRe;\n          }\n\n          startNewMode(end_mode.starts, '');\n        }\n\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top)) throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n\n    var result = '',\n        current;\n\n    for (current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n\n    var mode_buffer = '';\n    var relevance = 0;\n\n    try {\n      var match,\n          count,\n          index = 0;\n\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match) break;\n        count = processLexeme(value.substring(index, match.index), match[0]);\n        index = match.index + count;\n      }\n\n      processLexeme(value.substr(index));\n\n      for (current = top; current.parent; current = current.parent) {\n        // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n   - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n   */\n\n\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function (name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n\n    return result;\n  }\n  /*\n  Post-processing of the highlighted markup:\n   - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n   */\n\n\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR) ? value : value.replace(fixMarkupRe, function (match, p1) {\n      if (options.useBR && match === '\\n') {\n        return '<br>';\n      } else if (options.tabReplace) {\n        return p1.replace(/\\t/g, options.tabReplace);\n      }\n\n      return '';\n    });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n\n\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n    if (isNotHighlighted(language)) return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n    originalStream = nodeStream(node);\n\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n\n    result.value = fixMarkup(result.value);\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n\n\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n\n\n  function initHighlighting() {\n    if (initHighlighting.called) return;\n    initHighlighting.called = true;\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n  /*\n  Attaches highlighting to the page load event.\n  */\n\n\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    restoreLanguageApi(lang);\n\n    if (lang.aliases) {\n      lang.aliases.forEach(function (alias) {\n        aliases[alias] = name;\n      });\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n  /* Interface definition */\n\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.autoDetection = autoDetection;\n  hljs.inherit = inherit; // Common regexps\n\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~'; // Common modes\n\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]',\n    relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'',\n    end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n  };\n\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit({\n      className: 'comment',\n      begin: begin,\n      end: end,\n      contains: []\n    }, inherits || {});\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' + '%|em|ex|ch|rem' + '|vw|vh|vmin|vmax' + '|cm|mm|in|pt|pc|px' + '|deg|grad|rad|turn' + '|s|ms' + '|Hz|kHz' + '|dpi|dpcm|dppx' + ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [hljs.BACKSLASH_ESCAPE, {\n      begin: /\\[/,\n      end: /\\]/,\n      relevance: 0,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  return hljs;\n});"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/livescript.js"],"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","JS_IDENT_RE","TITLE","inherit","TITLE_MODE","begin","SUBST","className","end","keywords","SUBST_SIMPLE","EXPRESSIONS","BINARY_NUMBER_MODE","relevance","starts","variants","contains","BACKSLASH_ESCAPE","excludeEnd","HASH_COMMENT_MODE","excludeBegin","subLanguage","PARAMS","returnBegin","concat","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"mappings":"8EAAAA,EAAOC,QAAU,SAAUC,GACzB,IAAIC,EAAW,CACbC,QACA,8WAEAC,QACA,uDAEAC,SAAU,2DAERC,EAAc,8CACdC,EAAQN,EAAKO,QAAQP,EAAKQ,WAAY,CACxCC,MAAOJ,IAELK,EAAQ,CACVC,UAAW,QACXF,MAAO,MACPG,IAAK,IACLC,SAAUZ,GAERa,EAAe,CACjBH,UAAW,QACXF,MAAO,cACPG,IAAK,qCACLC,SAAUZ,GAERc,EAAc,CAACf,EAAKgB,mBAAoB,CAC1CL,UAAW,SACXF,MAAO,0GACPQ,UAAW,EACXC,OAAQ,CACNN,IAAK,WACLK,UAAW,IAGZ,CACDN,UAAW,SACXQ,SAAU,CAAC,CACTV,MAAO,MACPG,IAAK,MACLQ,SAAU,CAACpB,EAAKqB,mBACf,CACDZ,MAAO,IACPG,IAAK,IACLQ,SAAU,CAACpB,EAAKqB,mBACf,CACDZ,MAAO,MACPG,IAAK,MACLQ,SAAU,CAACpB,EAAKqB,iBAAkBX,EAAOI,IACxC,CACDL,MAAO,IACPG,IAAK,IACLQ,SAAU,CAACpB,EAAKqB,iBAAkBX,EAAOI,IACxC,CACDL,MAAO,KACPG,IAAK,SACLU,YAAY,KAEb,CACDX,UAAW,SACXQ,SAAU,CAAC,CACTV,MAAO,KACPG,IAAK,WACLQ,SAAU,CAACV,EAAOV,EAAKuB,oBACtB,CAGDd,MAAO,0CAER,CACDA,MAAO,IAAMJ,GACZ,CACDI,MAAO,KACPG,IAAK,KACLY,cAAc,EACdF,YAAY,EACZG,YAAa,eAEff,EAAMU,SAAWL,EACjB,IAAIW,EAAS,CACXf,UAAW,SACXF,MAAO,MACPkB,aAAa,EAIbP,SAAU,CAAC,CACTX,MAAO,KACPG,IAAK,KACLC,SAAUZ,EACVmB,SAAU,CAAC,QAAQQ,OAAOb,MAG9B,MAAO,CACLc,QAAS,CAAC,MACVhB,SAAUZ,EACV6B,QAAS,OACTV,SAAUL,EAAYa,OAAO,CAAC5B,EAAK+B,QAAQ,SAAU,UAAW/B,EAAKuB,kBAAmB,CACtFZ,UAAW,WACXS,SAAU,CAACd,EAAOoB,GAClBC,aAAa,EACbR,SAAU,CAAC,CACTV,MAAO,IAAMJ,EAAc,+CAC3BO,IAAK,YACJ,CACDH,MAAO,IAAMJ,EAAc,uDAC3BO,IAAK,kBACJ,CACDH,MAAO,IAAMJ,EAAc,uDAC3BO,IAAK,sBAEN,CACDD,UAAW,QACXqB,cAAe,QACfpB,IAAK,IACLkB,QAAS,YACTV,SAAU,CAAC,CACTY,cAAe,UACfC,gBAAgB,EAChBH,QAAS,YACTV,SAAU,CAACd,IACVA,IACF,CACDG,MAAOJ,EAAc,IACrBO,IAAK,IACLe,aAAa,EACbO,WAAW,EACXjB,UAAW","file":"react-syntax-highlighter_languages_highlight_livescript-8a35726b546a3d887308.js","sourcesContent":["module.exports = function (hljs) {\n  var KEYWORDS = {\n    keyword: // JS keywords\n    'in if for while finally new do return else break catch instanceof throw try this ' + 'switch continue typeof delete debugger case default function var with ' + // LiveScript keywords\n    'then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super ' + 'case default function var void const let enum export import native ' + '__hasProp __extends __slice __bind __indexOf',\n    literal: // JS literals\n    'true false null undefined ' + // LiveScript literals\n    'yes no on off it that void',\n    built_in: 'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /}/,\n    keywords: KEYWORDS\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/,\n    end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [hljs.BINARY_NUMBER_MODE, {\n    className: 'number',\n    begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n    relevance: 0,\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    } // a number tries to eat the following slash to prevent treating it as a regexp\n\n  }, {\n    className: 'string',\n    variants: [{\n      begin: /'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n    }, {\n      begin: /\\\\/,\n      end: /(\\s|$)/,\n      excludeEnd: true\n    }]\n  }, {\n    className: 'regexp',\n    variants: [{\n      begin: '//',\n      end: '//[gim]*',\n      contains: [SUBST, hljs.HASH_COMMENT_MODE]\n    }, {\n      // regex can't start with space to parse x / 2 / 3 as two divisions\n      // regex can't start with *, and it supports an \"illegal\" in the main mode\n      begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n    }]\n  }, {\n    begin: '@' + JS_IDENT_RE\n  }, {\n    begin: '``',\n    end: '``',\n    excludeBegin: true,\n    excludeEnd: true,\n    subLanguage: 'javascript'\n  }];\n  SUBST.contains = EXPRESSIONS;\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    returnBegin: true,\n\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  return {\n    aliases: ['ls'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'), hljs.HASH_COMMENT_MODE, {\n      className: 'function',\n      contains: [TITLE, PARAMS],\n      returnBegin: true,\n      variants: [{\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?',\n        end: '\\\\->\\\\*?'\n      }, {\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?',\n        end: '[-~]{1,2}>\\\\*?'\n      }, {\n        begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?',\n        end: '!?[-~]{1,2}>\\\\*?'\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n};"],"sourceRoot":""}
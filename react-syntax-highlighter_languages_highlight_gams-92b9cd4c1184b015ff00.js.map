{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/gams.js"],"names":["module","exports","hljs","KEYWORDS","SYMBOLS","className","variants","begin","QSTR","end","illegal","contains","BACKSLASH_ESCAPE","ASSIGNMENT","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","DESCTEXT","excludeBegin","endsWithParent","relevance","aliases","case_insensitive","COMMENT","returnBegin","beginKeywords","excludeEnd"],"mappings":"6EAAAA,EAAOC,QAAU,SAAUC,GACzB,IAAIC,EAAW,CACb,QAAW,oVACX,QAAW,aACX,WAAY,u3BASVC,EAAU,CACZC,UAAW,SACXC,SAAU,CAAC,CACTC,MAAO,eACN,CACDA,MAAO,QAGPC,EAAO,CAETH,UAAW,UACXC,SAAU,CAAC,CACTC,MAAO,IACPE,IAAK,KACJ,CACDF,MAAO,IACPE,IAAK,MAEPC,QAAS,MACTC,SAAU,CAACT,EAAKU,mBAEdC,EAAa,CACfN,MAAO,IACPE,IAAK,IACLK,SAAUX,EACVQ,SAAU,CAACH,EAAMN,EAAKa,oBAAqBb,EAAKc,qBAAsBd,EAAKe,kBAAmBf,EAAKgB,iBAAkBhB,EAAKiB,gBAExHC,EAAW,CAEbb,MAAO,2CACPc,cAAc,EACdZ,IAAK,IACLa,gBAAgB,EAChBX,SAAU,CAACH,EAAMK,EAAY,CAC3BR,UAAW,UACXE,MAAO,gDACPgB,UAAW,KAGf,MAAO,CACLC,QAAS,CAAC,OACVC,kBAAkB,EAClBX,SAAUX,EACVQ,SAAU,CAACT,EAAKwB,QAAQ,YAAa,cAAe,CAClDrB,UAAW,OACXE,MAAO,gBACPE,IAAK,IACLkB,aAAa,EACbhB,SAAU,CAAC,CACTN,UAAW,eACXE,MAAO,mBAERL,EAAKwB,QAAQ,OAAQ,KAAMxB,EAAKa,oBAAqBb,EAAKc,qBAAsBd,EAAKe,kBAAmBf,EAAKgB,iBAChH,CACEU,cAAe,qFACfnB,IAAK,IACLE,SAAU,CAACT,EAAKwB,QAAQ,OAAQ,KAAMxB,EAAKa,oBAAqBb,EAAKc,qBAAsBd,EAAKe,kBAAmBf,EAAKgB,iBAAkBL,EAAYO,IACrJ,CAEDQ,cAAe,QACfnB,IAAK,IACLkB,aAAa,EACbhB,SAAU,CAAC,CAETiB,cAAe,QACfnB,IAAK,IACLE,SAAU,CAACS,IACVlB,EAAKwB,QAAQ,OAAQ,KAAMxB,EAAKa,oBAAqBb,EAAKc,qBAAsBd,EAAKe,kBAAmBf,EAAKgB,iBAAkBhB,EAAKiB,gBAGzI,CACEd,UAAW,WACXE,MAAO,iCACPoB,aAAa,EACbhB,SAAU,CAAC,CAETN,UAAW,QACXE,MAAO,eApFA,CACXF,UAAW,SACXE,MAAO,KACPE,IAAK,KACLY,cAAc,EACdQ,YAAY,GAgFCzB,IACVF,EAAKiB,cAAef","file":"react-syntax-highlighter_languages_highlight_gams-92b9cd4c1184b015ff00.js","sourcesContent":["module.exports = function (hljs) {\n  var KEYWORDS = {\n    'keyword': 'abort acronym acronyms alias all and assign binary card diag display ' + 'else eq file files for free ge gt if integer le loop lt maximizing ' + 'minimizing model models ne negative no not option options or ord ' + 'positive prod put putpage puttl repeat sameas semicont semiint smax ' + 'smin solve sos1 sos2 sum system table then until using while xor yes',\n    'literal': 'eps inf na',\n    'built-in': 'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' + 'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' + 'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' + 'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' + 'randBinomial randLinear randTriangle round rPower sigmoid sign ' + 'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' + 'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' + 'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' + 'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' + 'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' + 'handleCollect handleDelete handleStatus handleSubmit heapFree ' + 'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' + 'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' + 'timeElapsed timeExec timeStart'\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true\n  };\n  var SYMBOLS = {\n    className: 'symbol',\n    variants: [{\n      begin: /\\=[lgenxc]=/\n    }, {\n      begin: /\\$/\n    }]\n  };\n  var QSTR = {\n    // One-line quoted comment string\n    className: 'comment',\n    variants: [{\n      begin: '\\'',\n      end: '\\''\n    }, {\n      begin: '\"',\n      end: '\"'\n    }],\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  var ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [QSTR, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n  var DESCTEXT = {\n    // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [QSTR, ASSIGNMENT, {\n      className: 'comment',\n      begin: /([ ]*[a-z0-9&#*=?@>\\\\<:\\-,()$\\[\\]_.{}!+%^]+)+/,\n      relevance: 0\n    }]\n  };\n  return {\n    aliases: ['gms'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [hljs.COMMENT(/^\\$ontext/, /^\\$offtext/), {\n      className: 'meta',\n      begin: '^\\\\$[a-z0-9]+',\n      end: '$',\n      returnBegin: true,\n      contains: [{\n        className: 'meta-keyword',\n        begin: '^\\\\$[a-z0-9]+'\n      }]\n    }, hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, // Declarations\n    {\n      beginKeywords: 'set sets parameter parameters variable variables ' + 'scalar scalars equation equations',\n      end: ';',\n      contains: [hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, ASSIGNMENT, DESCTEXT]\n    }, {\n      // table environment\n      beginKeywords: 'table',\n      end: ';',\n      returnBegin: true,\n      contains: [{\n        // table header row\n        beginKeywords: 'table',\n        end: '$',\n        contains: [DESCTEXT]\n      }, hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE // Table does not contain DESCTEXT or ASSIGNMENT\n      ]\n    }, // Function definitions\n    {\n      className: 'function',\n      begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n      returnBegin: true,\n      contains: [{\n        // Function title\n        className: 'title',\n        begin: /^[a-z0-9_]+/\n      }, PARAMS, SYMBOLS]\n    }, hljs.C_NUMBER_MODE, SYMBOLS]\n  };\n};"],"sourceRoot":""}
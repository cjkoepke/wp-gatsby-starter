{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/sml.js"],"names":["module","exports","hljs","aliases","keywords","keyword","built_in","literal","illegal","lexemes","contains","className","begin","relevance","COMMENT","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE"],"mappings":"gFAAAA,EAAOC,QAAU,SAAUC,GACzB,MAAO,CACLC,QAAS,CAAC,MACVC,SAAU,CACRC,QAEA,iPACAC,SAEA,uFACAC,QAAS,+CAEXC,QAAS,UACTC,QAAS,eACTC,SAAU,CAAC,CACTC,UAAW,UACXC,MAAO,mBACPC,UAAW,GACVX,EAAKY,QAAQ,SAAU,SAAU,CAClCJ,SAAU,CAAC,UACT,CAEFC,UAAW,SACXC,MAAO,0BAGN,CAEDD,UAAW,OACXC,MAAO,iBACN,CAEDD,UAAW,OACXC,MAAO,kBACPC,UAAW,GACV,CAEDD,MAAO,sBACNV,EAAKa,QAAQb,EAAKc,iBAAkB,CACrCL,UAAW,SACXE,UAAW,IACTX,EAAKa,QAAQb,EAAKe,kBAAmB,CACvCT,QAAS,OACP,CACFG,UAAW,SACXC,MAAO,2HACPC,UAAW,GACV,CACDD,MAAO","file":"react-syntax-highlighter_languages_highlight_sml-dcb3a8fa3cd7f0632460.js","sourcesContent":["module.exports = function (hljs) {\n  return {\n    aliases: ['ml'],\n    keywords: {\n      keyword:\n      /* according to Definition of Standard ML 97  */\n      'abstype and andalso as case datatype do else end eqtype ' + 'exception fn fun functor handle if in include infix infixr ' + 'let local nonfix of op open orelse raise rec sharing sig ' + 'signature struct structure then type val with withtype where while',\n      built_in:\n      /* built-in types according to basis library */\n      'array bool char exn int list option order real ref string substring vector unit word',\n      literal: 'true false NONE SOME LESS EQUAL GREATER nil'\n    },\n    illegal: /\\/\\/|>>/,\n    lexemes: '[a-z_]\\\\w*!?',\n    contains: [{\n      className: 'literal',\n      begin: /\\[(\\|\\|)?\\]|\\(\\)/,\n      relevance: 0\n    }, hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)', {\n      contains: ['self']\n    }), {\n      /* type variable */\n      className: 'symbol',\n      begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n      /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n\n    }, {\n      /* polymorphic variant */\n      className: 'type',\n      begin: '`[A-Z][\\\\w\\']*'\n    }, {\n      /* module or constructor */\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w\\']*',\n      relevance: 0\n    }, {\n      /* don't color identifiers, but safely catch all identifiers with '*/\n      begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\n    }, hljs.inherit(hljs.APOS_STRING_MODE, {\n      className: 'string',\n      relevance: 0\n    }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    }), {\n      className: 'number',\n      begin: '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' + '0[oO][0-7_]+[Lln]?|' + '0[bB][01_]+[Lln]?|' + '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n      relevance: 0\n    }, {\n      begin: /[-=]>/ // relevance booster\n\n    }]\n  };\n};"],"sourceRoot":""}
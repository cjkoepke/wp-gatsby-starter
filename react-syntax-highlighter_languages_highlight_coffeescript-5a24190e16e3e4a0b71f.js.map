{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/coffeescript.js"],"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","JS_IDENT_RE","SUBST","className","begin","end","keywords","EXPRESSIONS","BINARY_NUMBER_MODE","inherit","C_NUMBER_MODE","starts","relevance","variants","contains","BACKSLASH_ESCAPE","HASH_COMMENT_MODE","subLanguage","excludeBegin","excludeEnd","TITLE","TITLE_MODE","PARAMS","returnBegin","concat","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"mappings":"6EAAAA,EAAOC,QAAU,SAAUC,GACzB,IAAIC,EAAW,CACbC,QACA,+NAEAC,QACA,0CAEAC,SAAU,2DAERC,EAAc,2BACdC,EAAQ,CACVC,UAAW,QACXC,MAAO,MACPC,IAAK,IACLC,SAAUT,GAERU,EAAc,CAACX,EAAKY,mBAAoBZ,EAAKa,QAAQb,EAAKc,cAAe,CAC3EC,OAAQ,CACNN,IAAK,WACLO,UAAW,KAGf,CACET,UAAW,SACXU,SAAU,CAAC,CACTT,MAAO,MACPC,IAAK,MACLS,SAAU,CAAClB,EAAKmB,mBACf,CACDX,MAAO,IACPC,IAAK,IACLS,SAAU,CAAClB,EAAKmB,mBACf,CACDX,MAAO,MACPC,IAAK,MACLS,SAAU,CAAClB,EAAKmB,iBAAkBb,IACjC,CACDE,MAAO,IACPC,IAAK,IACLS,SAAU,CAAClB,EAAKmB,iBAAkBb,MAEnC,CACDC,UAAW,SACXU,SAAU,CAAC,CACTT,MAAO,MACPC,IAAK,MACLS,SAAU,CAACZ,EAAON,EAAKoB,oBACtB,CACDZ,MAAO,WACPQ,UAAW,GACV,CAGDR,MAAO,0CAER,CACDA,MAAO,IAAMH,GAEZ,CACDgB,YAAa,aACbC,cAAc,EACdC,YAAY,EACZN,SAAU,CAAC,CACTT,MAAO,MACPC,IAAK,OACJ,CACDD,MAAO,IACPC,IAAK,QAGTH,EAAMY,SAAWP,EACjB,IAAIa,EAAQxB,EAAKa,QAAQb,EAAKyB,WAAY,CACxCjB,MAAOH,IAGLqB,EAAS,CACXnB,UAAW,SACXC,MAAO,YACPmB,aAAa,EAIbT,SAAU,CAAC,CACTV,MAAO,KACPC,IAAK,KACLC,SAAUT,EACViB,SAAU,CAAC,QAAQU,OAAOjB,MAG9B,MAAO,CACLkB,QAAS,CAAC,SAAU,OAAQ,QAC5BnB,SAAUT,EACV6B,QAAS,OACTZ,SAAUP,EAAYiB,OAAO,CAAC5B,EAAK+B,QAAQ,MAAO,OAAQ/B,EAAKoB,kBAAmB,CAChFb,UAAW,WACXC,MAAO,QAAUH,EAAV,mCACPI,IAAK,QACLkB,aAAa,EACbT,SAAU,CAACM,EAAOE,IACjB,CAEDlB,MAAO,aACPQ,UAAW,EACXE,SAAU,CAAC,CACTX,UAAW,WACXC,MA/BU,0BAgCVC,IAAK,QACLkB,aAAa,EACbT,SAAU,CAACQ,MAEZ,CACDnB,UAAW,QACXyB,cAAe,QACfvB,IAAK,IACLqB,QAAS,YACTZ,SAAU,CAAC,CACTc,cAAe,UACfC,gBAAgB,EAChBH,QAAS,YACTZ,SAAU,CAACM,IACVA,IACF,CACDhB,MAAOH,EAAc,IACrBI,IAAK,IACLkB,aAAa,EACbO,WAAW,EACXlB,UAAW","file":"react-syntax-highlighter_languages_highlight_coffeescript-5a24190e16e3e4a0b71f.js","sourcesContent":["module.exports = function (hljs) {\n  var KEYWORDS = {\n    keyword: // JS keywords\n    'in if for while finally new do return else break catch instanceof throw try this ' + 'switch continue typeof delete debugger super yield import export from as default await ' + // Coffee keywords\n    'then unless until loop of by when and or is isnt not',\n    literal: // JS literals\n    'true false null undefined ' + // Coffee literals\n    'yes no on off',\n    built_in: 'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [hljs.BINARY_NUMBER_MODE, hljs.inherit(hljs.C_NUMBER_MODE, {\n    starts: {\n      end: '(\\\\s*/)?',\n      relevance: 0\n    }\n  }), // a number tries to eat the following slash to prevent treating it as a regexp\n  {\n    className: 'string',\n    variants: [{\n      begin: /'''/,\n      end: /'''/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /'/,\n      end: /'/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }, {\n      begin: /\"/,\n      end: /\"/,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n    }]\n  }, {\n    className: 'regexp',\n    variants: [{\n      begin: '///',\n      end: '///',\n      contains: [SUBST, hljs.HASH_COMMENT_MODE]\n    }, {\n      begin: '//[gim]*',\n      relevance: 0\n    }, {\n      // regex can't start with space to parse x / 2 / 3 as two divisions\n      // regex can't start with *, and it supports an \"illegal\" in the main mode\n      begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n    }]\n  }, {\n    begin: '@' + JS_IDENT_RE // relevance booster\n\n  }, {\n    subLanguage: 'javascript',\n    excludeBegin: true,\n    excludeEnd: true,\n    variants: [{\n      begin: '```',\n      end: '```'\n    }, {\n      begin: '`',\n      end: '`'\n    }]\n  }];\n  SUBST.contains = EXPRESSIONS;\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]',\n    returnBegin: true,\n\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n  return {\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([hljs.COMMENT('###', '###'), hljs.HASH_COMMENT_MODE, {\n      className: 'function',\n      begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE,\n      end: '[-=]>',\n      returnBegin: true,\n      contains: [TITLE, PARAMS]\n    }, {\n      // anonymous function start\n      begin: /[:\\(,=]\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'function',\n        begin: PARAMS_RE,\n        end: '[-=]>',\n        returnBegin: true,\n        contains: [PARAMS]\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '$',\n      illegal: /[:=\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends',\n        endsWithParent: true,\n        illegal: /[:=\"\\[\\]]/,\n        contains: [TITLE]\n      }, TITLE]\n    }, {\n      begin: JS_IDENT_RE + ':',\n      end: ':',\n      returnBegin: true,\n      returnEnd: true,\n      relevance: 0\n    }])\n  };\n};"],"sourceRoot":""}